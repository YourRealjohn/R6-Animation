--// GUI setup
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Check if GUI already exists
local screenGui = playerGui:FindFirstChild("CLN_GUI") or Instance.new("ScreenGui")
screenGui.Name = "CLN_GUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- Check if button already exists
local button = screenGui:FindFirstChild("CLN_Button") or Instance.new("TextButton")
button.Name = "CLN_Button"
button.Size = UDim2.new(0, 120, 0, 40)
button.Position = UDim2.new(0.5, -60, 0.9, -20)
button.Text = "C.L.N: OFF"
button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
button.TextColor3 = Color3.new(1, 1, 1)
button.Active = true
button.Draggable = true
button.Parent = screenGui

--// Logic
local isOn = false
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Animations
local idleAnim = Instance.new("Animation")
idleAnim.AnimationId = "rbxassetid://160737408"

local jumpAnim = Instance.new("Animation")
jumpAnim.AnimationId = "rbxassetid://97170520"

local runAnim = Instance.new("Animation")
runAnim.AnimationId = "rbxassetid://252557606"

local idleTrack = humanoid:LoadAnimation(idleAnim)
local jumpTrack = humanoid:LoadAnimation(jumpAnim)
local runTrack = humanoid:LoadAnimation(runAnim)

local animLoop
local isJumping = false

-- Disconnect previous click connections
for _, conn in ipairs(getconnections(button.MouseButton1Click)) do
	conn:Disconnect()
end

-- Button click
button.MouseButton1Click:Connect(function()
	isOn = not isOn
	button.Text = isOn and "C.L.N: ON" or "C.L.N: OFF"
	button.BackgroundColor3 = isOn and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(50, 50, 50)

	if isOn then
		animLoop = task.spawn(function()
			while isOn do
				if humanoid.MoveDirection.Magnitude == 0 and not isJumping then
					runTrack:Stop()
					if not idleTrack.IsPlaying then
						idleTrack:Play()
					end
				else
					idleTrack:Stop()
				end
				task.wait(0.1)
			end
		end)
	else
		idleTrack:Stop()
		runTrack:Stop()
		if animLoop then task.cancel(animLoop) end
	end
end)

-- Jump
humanoid.Jumping:Connect(function(jump)
	if isOn and jump then
		isJumping = true
		runTrack:Stop()
		idleTrack:Stop()
		jumpTrack:Play()
	end
end)

-- Detect when landed (by checking FloorMaterial change)
humanoid:GetPropertyChangedSignal("FloorMaterial"):Connect(function()
	if isOn and humanoid.FloorMaterial ~= Enum.Material.Air then
		isJumping = false
		if humanoid.MoveDirection.Magnitude > 0 then
			runTrack:Play()
		end
	end
end)

-- Run
humanoid.Running:Connect(function(speed)
	if isOn and not isJumping then
		if speed > 12 then
			if not runTrack.IsPlaying then
				runTrack:Play()
			end
		else
			runTrack:Stop()
		end
	end
end)
